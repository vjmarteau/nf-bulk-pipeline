/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  vjmarteau/nf-bulk-pipeline Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  Default config options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

manifest {
    name             = 'vjmarteau/nf-bulk-pipeline'
    author           = 'Valentin Marteau'
    description      = 'nf-pipeline template for custom data analysis'
    nextflowVersion  = '>=22.04'
    version          = 'v0.1'
}

// Global default params, used in configs
params {

  // Choose between "symlink" - absolute path, "rellink" -relative path, "link " -hard link, "copy"
  publish_dir_mode = "copy"

  // Workflow flags
  samplesheet             = "/home/marteau/projects/nextflow/2022/Adolph_pseudobulk/samplesheet_pseudobulk.csv"
  gene_expression_matrix  = "/data/projects/2022/Adolph-scRNA-organoids/pseudobulk/star_salmon/salmon.merged.gene_counts.tsv"
  GOI                     = "./tests/genes_of_interest.txt"
  prefix                  = "pseudobulk"
  resDir                  = "/home/marteau/myScratch/nf-work-dir/nf-bulk-pipeline/results"
  model                   = "~treatment+patient"
  treat_col               = "treatment"
  pCutoff                 = 0.05
  FCcutoff                = 2
}

process {

container = "./envs/nf-bulk-r.sif" // Run all above processes in same singularity container
//container = "library://vjmarteau/nextflow/nf-bulk-r:latest" // Load container from Sylabs cloud public repo

  cpus = 1

  // Per-process configuration
  withName: Reformat_data {
    //container = "./envs/R-modules.sif" // Run this process in specific singularity container, can also be specified in respective module
      publishDir = [path: { "${params.resDir}/Reformat_data" }, mode: params.publish_dir_mode]
  }
  withName: DESeq2_DGEA {
      publishDir = [path: { "${params.resDir}/DESeq2_DGEA" }, mode: params.publish_dir_mode]
  }
  withName: Draw_volcano {
      publishDir = [path: { "${params.resDir}/Draw_volcano" }, mode: params.publish_dir_mode]
  }
  withName: Plot_GOI_levels {
      publishDir = [path: { "${params.resDir}/Plot_GOI_levels" }, mode: params.publish_dir_mode]
  }
  withName: variancePartition {
      publishDir = [path: { "${params.resDir}/variancePartition" }, mode: params.publish_dir_mode]
  }
}


conda {
    useMamba = true
}

singularity {
    enabled = true
    runOptions = "--no-home" // Prevents using packages stored in local home dir 
    autoMounts = true
}

profiles {

    standard {
        process.executor = 'local'
    }

    cluster {
        process.executor = 'sge'
        process.penv = 'smp'
        process.queueSize = 600
        process.clusterOptions = { '-V -S /bin/bash -q all.q' }
    }

// Define profile for CI tests on github actions
    test {
      params {
        // Test workflow flags      
        samplesheet             = "${projectDir}/tests/samplesheet.csv"
        gene_expression_matrix  = "${projectDir}/tests/gene_expression_matrix.tsv"
        GOI                     = "${projectDir}/tests/genes_of_interest.txt"
        prefix                  = "test"
        resDir                  = "${projectDir}/results"
        model                   = "~treatment+patient"
        treat_col               = "treatment"
        pCutoff                 = 0.05
        FCcutoff                = 2
        testrun                 = true
        max_cpus                = 2
        max_memory              = 6.GB
        max_time                = 1.h
        }
    }
}